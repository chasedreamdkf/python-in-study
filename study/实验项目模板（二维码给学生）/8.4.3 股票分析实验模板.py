# ------------      -------    --------    -----------    -----------
# @File       : 8.4.3 股票分析实验模板.py    
# @Contact    : vasp@qq.com
# @Copyright  : 2018-2025, Wuhan University of Technology
# @Modify Time: 2021/4/27 18:38
# @Author     : 赵广辉
# @Version    : 1.0
# @License    : 仅限用于Python程序设计基础实践教程(赵广辉,高等教育出版社)配套实验
# ------------      -------    --------    -----------    -----------
import os
import datetime
import numpy as np
import pandas_datareader.data as web


# 设置常量，对应各列数据的语义，方便索引
HIGH = 0
LOW = 1
OPEN = 2
CLOSE = 3
VOLUME = 4
ADJCLOSE = 5


def file_list(file):
    """
    @参数 file: 文件名，字符串类型
    将文件中的股票代码与股票名称读入到字典中，返回股票代码字典。
    ['600000', '600004', '600006', '600007', '600008', '600009',...]
    """
    # =======================================================
    # 此处去掉注释符号“#”并补充你的代码

    # =======================================================


def get_stock(code_list):
    """
    @参数 code_list：股票代码列表，列表类型
    从网络获取股票代码列表中的股票信息，日期从2018年1月1日开始到今天，保存为csv文件，
    放于'./data/stock/'下。
    """
    # =======================================================
    # 此处去掉注释符号“#”并补充你的代码

    # =======================================================


def filename_list(path):
    """接收路径字符串为参数，获取该路径下所有文件名，以列表形式返回
    os.listdir(path)以列表形式返回path路径下的所有文件名，不包括子路径中的文件名"""
    # =======================================================
    # 此处去掉注释符号“#”并补充你的代码

    # =======================================================


def statistics_of_all(code_list):
    """
    @参数 code_list：股票代码列表，列表类型
    接收股票数据文件名列表，逐个统计各股票数据文件涨跌幅、总成交量、最高价和最低价。
    涨跌幅计算公式为：(最新记录收盘价-最早记录收盘价) / 最早记录收盘价 * 100
    为方便处理，读入数据时，略过日期列。
    """
    # =======================================================
    # 此处去掉注释符号“#”并补充你的代码

    # =======================================================


def top_10_uplift(statistics_of_stock):
    """
    @参数 statistics_of_stock：每支股票涨跌幅、总成交量、最高价和最低价统计信息，列表类型
    按涨幅降序排序，涨幅相同时按股票代码降序排序，取排名前10的股票，
    返回排名前10的股票代码，返回值为列表类型。
    """
    # =======================================================
    # 此处去掉注释符号“#”并补充你的代码

    # =======================================================


def top_10_fall(statistics_of_stock):
    """
    @参数 statistics_of_stock：每支股票涨跌幅、总成交量、最高价和最低价统计信息，列表类型
    按跌幅升序排序，跌幅相同时，按股票代码升序排序，取排名前10的股票，返回跌幅最大的10支股
    票代码的集合。
    """
    # =======================================================
    # 此处去掉注释符号“#”并补充你的代码

    # =======================================================


def top_10_volumes(statistics_of_stock):
    """
    @参数 statistics_of_stock：每支股票涨跌幅、总成交量、最高价和最低价统计信息，列表类型
    按成交量降序排序，成交量相同时，按股票代码降序排序，取成交量前10的股票代码，返回成交量
    最大的10支股票代码集合。
    """
    # =======================================================
    # 此处去掉注释符号“#”并补充你的代码

    # =======================================================


def top_10_high(statistics_of_stock):
    """
    @参数 statistics_of_stock：每支股票涨跌幅、总成交量、最高价和最低价统计信息，列表类型
    按最高价降序排序，最高价相同时，按股票代码降序排序返回，取排名前10的股票，返回最高价最
    高的10支股票代码的集合。
    """
    # =======================================================
    # 此处去掉注释符号“#”并补充你的代码

    # =======================================================


def top_10_low(statistics_of_stock):
    """
    @参数 statistics_of_stock：每支股票涨跌幅、总成交量、最高价和最低价统计信息，列表类型
    按最低价升序排序，最低价相同时，按股票代码升序排序，取排名前10的股票，返回最低价最低的
    10支股票代码集合。
    """
    # =======================================================
    # 此处去掉注释符号“#”并补充你的代码

    # =======================================================


def high_and_volumes(top_high, top_volumes):
    """
    @参数 top_high，最高价在前10名的股票代码，字符串
    @参数 top_volumes，成交量在前10名的股票代码，字符串
    找出涨幅和成交量均在前10名的股票
    找出跌幅和成交量均在前10名的股票。
    """
    print('涨幅和成交量均在前10名的股票:')
    # =======================================================
    # 此处去掉注释符号“#”并补充你的代码
    # =======================================================

    print('涨幅或成交量在前10名的股票:')
    # =======================================================
    # 此处去掉注释符号“#”并补充你的代码
    # =======================================================

    print('涨幅前10名，但成交量未进前10名的股票:')
    # =======================================================
    # 此处去掉注释符号“#”并补充你的代码
    # =======================================================

    print('涨幅和成交量均在前10名的股票:')
    # =======================================================
    # 此处去掉注释符号“#”并补充你的代码
    # =======================================================


def high_and_uplift(top_high, top_uplift):
    """
    @参数 top_high，最高价在前10名的股票代码，字符串
    @参数 top_uplift，涨幅在前10名的股票代码，字符串
    找出并输出涨幅和最高价均在前10名的股票代码。
    找出并输出涨幅或最高价在前10名的股票代码。
    找出并输出涨幅前10名，但最高价未进前10名的股票代码。
    找出并输出涨幅前10名，但最高价未进前10名的股票代码，和最高价前10名但涨幅没进前10名的股
    票代码。
    """
    print('涨幅和最高价均在前10名的股票:')
    # =======================================================
    # 此处去掉注释符号“#”并补充你的代码
    # =======================================================

    print('涨幅或最高价在前10名的股票:')
    # =======================================================
    # 此处去掉注释符号“#”并补充你的代码
    # =======================================================

    print('涨幅前10名，但最高价未进前10名的股票:')
    # =======================================================
    # 此处去掉注释符号“#”并补充你的代码
    # =======================================================

    print('涨幅前10名，但最高价未进前10名的股票，和最高价前10名但涨幅没进前10名的股票:')
    # =======================================================
    # 此处去掉注释符号“#”并补充你的代码
    # =======================================================


def low_and_fall(top_low, top_fall):
    """
    @参数 top_low，最低价在前10名的股票代码，字符串
    @参数 top_fall，跌幅在前10名的股票代码，字符串
    找出并输出跌幅和最低价均在前10名的股票代码。
    找出并输出跌幅或最低价在前10名的股票代码。
    找出并输出跌幅前10名，但最低价未进前10名的股票代码。
    找出并输出跌幅前10名，但最低价未进前10名的股票代，和最低价前10名但跌幅没进前10名的股
    票代码。
    """
    print('跌幅和最低价均在前10名的股票:')
    # =======================================================
    # 此处去掉注释符号“#”并补充你的代码
    # =======================================================

    print('跌幅或最低价在前10名的股票:')
    # =======================================================
    # 此处去掉注释符号“#”并补充你的代码
    # =======================================================

    print('跌幅前10名，但最低价未进前10名的股票:')
    # =======================================================
    # 此处去掉注释符号“#”并补充你的代码
    # =======================================================

    print('跌幅前10名，但最低价未进前10名的股票，和最低价前10名但跌幅没进前10名的股票:')
    # =======================================================
    # 此处去掉注释符号“#”并补充你的代码
    # =======================================================


if __name__ == '__main__':
    filename = '../data/沪市股票top300.csv'              # 股票名称与代码文件
    filepath = '../data/stock/'                         # 定义数据文件保存路径
    stock_dic = file_list(filename)                     # 读股票代码到列表中
    # get_stock(stock_list)                             # 根据股票代码从雅虎财经网获取对应的股票数据
    stock_lst = filename_list(filepath)                 # 读取获取到的股票数据的文件名到字典
    statistics_of_list = statistics_of_all(stock_lst)   # 对获取的股票数据进行统计
    uplift_set = top_10_uplift(statistics_of_list)      # 涨幅前10名集合
    fall_set = top_10_fall(statistics_of_list)          # 跌幅前10名集合
    volumes_set = top_10_volumes(statistics_of_list)    # 成交量前10名集合
    high_set = top_10_high(statistics_of_list)          # 最高价前10名集合
    low_set = top_10_low(statistics_of_list)            # 最低价前10名集合
    high_and_uplift(high_set, uplift_set)               # 最高价与涨幅集合运算
    low_and_fall(low_set, fall_set)                     # 最低价与跌幅集合运算
